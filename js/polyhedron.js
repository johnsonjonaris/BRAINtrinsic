/**
 * Created by Johnson on 11/10/2016.
 */

// https://en.wikipedia.org/wiki/Platonic_solid
/**
 * A class that returns the vertices and faces of a Platonic shape. The shape can be a tetrahedron, cube,
 * octahedron, dodecahedron or an icosahedron having 4, 6, 8, 12 and 20 faces respectively.
 * @constructor
 */
function Platonics() {

    this.vertices = [];
    this.faces = [];

    this.createTetrahedron = function() {

        vertices = [[0, 0, 0],
                    [1, 1, 0],
                    [1, 0, 1],
                    [0, 1, 1]];
        faces = [[0, 1, 2],
                 [0, 2, 3],
                 [0, 3, 1],
                 [3, 2, 1]];
    };

    this.createCube = function() {

        vertices = [[0,	0, 0],
                    [1,	0, 0],
                    [0,	1, 0],
                    [1,	1, 0],
                    [0,	0, 1],
                    [1,	0, 1],
                    [0,	1, 1],
                    [1,	1, 1]];

        faces = [[1, 3, 4, 2],
                 [5, 6, 8, 7],
                 [2, 4, 8, 6],
                 [1, 5, 7, 3],
                 [1, 2, 6, 5],
                 [3, 7, 8, 4]];
    };

    this.createOctahedron = function() {

        vertices = [[1, 0, 0],
                    [0, 1, 0],
                    [-1, 0, 0],
                    [0, -1, 0],
                    [0, 0, 1],
                    [0, 0, -1]];

        faces = [[1, 2, 5],
                 [2, 3, 5],
                 [3, 4, 5],
                 [4, 1, 5],
                 [1, 6, 2],
                 [2, 6, 3],
                 [3, 6, 4],
                 [1, 4, 6]];
    };

    this.createDodecahedron = function() {

        vertices = [[-1.0000, -0.3820,       0],
                    [-1.0000,  0.3820,       0],
                    [-0.6180, -0.6180, -0.6180],
                    [-0.6180, -0.6180,  0.6180],
                    [-0.6180,  0.6180, -0.6180],
                    [-0.6180,  0.6180,  0.6180],
                    [-0.3820,       0, -1.0000],
                    [-0.3820,       0,  1.0000],
                    [      0, -1.0000, -0.3820],
                    [      0, -1.0000,  0.3820],
                    [      0,  1.0000, -0.3820],
                    [      0,  1.0000,  0.3820],
                    [ 0.3820,       0, -1.0000],
                    [ 0.3820,       0,  1.0000],
                    [ 0.6180, -0.6180, -0.6180],
                    [ 0.6180, -0.6180,  0.6180],
                    [ 0.6180,  0.6180, -0.6180],
                    [ 0.6180,  0.6180,  0.6180],
                    [ 1.0000, -0.3820,       0],
                    [ 1.0000,  0.3820,       0]];

        faces =[[14, 18, 12,  6,  8],
                [ 8,  4, 10, 16, 14],
                [13, 15,  9,  3,  7],
                [ 7,  5, 11, 17, 13],
                [11, 12, 18, 20, 17],
                [12, 11,  5,  2,  6],
                [ 9, 10,  4,  1,  3],
                [10,  9, 15, 19, 16],
                [20, 18, 14, 16, 19],
                [19, 15, 13, 17, 20],
                [ 2,  5,  7,  3,  1],
                [ 1,  4,  8,  6,  2]];

    };

    this.createIcosahedron = function() {

        vertices = [[      0,       0,      0],
                    [ 0.8507,       0, 0.5257],
                    [ 0.2629,  0.8090, 0.5257],
                    [-0.6882,  0.5000, 0.5257],
                    [-0.6882, -0.5000, 0.5257],
                    [ 0.2629, -0.8090, 0.5257],
                    [ 0.6882,  0.5000, 1.3764],
                    [-0.2629,  0.8090, 1.3764],
                    [-0.8507,  0.0000, 1.3764],
                    [-0.2629, -0.8090, 1.3764],
                    [ 0.6882, -0.5000, 1.3764],
                    [      0,       0, 1.9021]];

        faces =[[ 1,  3,  2],
                [ 1,  4,  3],
                [ 1,  5,  4],
                [ 1,  6,  5],
                [ 1,  2,  6],
                [ 2,  3,  7],
                [ 3,  4,  8],
                [ 4,  5,  9],
                [ 5,  6, 10],
                [ 6,  2, 11],
                [ 7,  3,  8],
                [ 8,  4,  9],
                [ 9,  5, 10],
                [10,  6, 11],
                [11,  2,  7],
                [ 7,  8, 12],
                [ 8,  9, 12],
                [ 9, 10, 12],
                [10, 11, 12],
                [11,  7, 12]];
    };
}